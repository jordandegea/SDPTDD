<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-parent</artifactId>
		<version>1.2-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>flink-project-1.0</artifactId>
	<name>flink-project</name>
	<packaging>jar</packaging>

	<dependencies>
		<!-- core dependencies -->

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_2.10</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-scala_2.10</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-examples-batch_2.10</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-twitter_2.10</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka-0.8_2.10</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- test dependencies -->

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils_2.10</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java_2.10</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>

</dependencies>

<build>
	<plugins>


		<!-- Use the shade plugin to build a fat jar for the kafka example -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-shade-plugin</artifactId>
			<executions>
				<execution>
					<id>fat-jar-kafka-example</id>
					<phase>package</phase>
					<goals>
						<goal>shade</goal>
					</goals>
					<configuration>
						<shadeTestJar>false</shadeTestJar>
						<shadedArtifactAttached>false</shadedArtifactAttached>
						<createDependencyReducedPom>false</createDependencyReducedPom>
						<transformers>
							<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
								<mainClass>org.apache.flink.project.cities.ReadFromKafka</mainClass>
							</transformer>
						</transformers>
						<finalName>KafkaProject</finalName>
						<outputFile>Kafka.jar</outputFile>
						<filters>
							<filter>
								<artifact>*</artifact>
								<includes>
									<include>org/apache/flink/project/cities/**</include>
									<include>org/apache/kafka/**</include>
									<include>org/apache/flink/streaming/connectors/kafka/**</include>
									<include>org/apache/flink/streaming/util/serialization/**</include>
									<include>org/apache/curator/**</include>
									<include>org/apache/zookeeper/**</include>
									<include>org/apache/jute/**</include>
									<include>org/I0Itec/**</include>
									<include>jline/**</include>
									<include>com/yammer/**</include>
									<include>kafka/**</include>
								</includes>
							</filter>
						</filters>
					</configuration>
				</execution>

			</executions>
		</plugin>

	</plugins>

	<pluginManagement>
		<plugins>
			<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-dependency-plugin</artifactId>
									<versionRange>[2.9,)</versionRange>
									<goals>
										<goal>unpack</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore/>
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
		</plugins>
	</pluginManagement>

</build>

</project>
