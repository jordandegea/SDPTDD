# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

# Check required Vagrant plugins are properly installed
required_plugins = %W(vagrant-hostmanager)
required_plugins.each do |required_plugin|
  unless Vagrant.has_plugin?(required_plugin)
    raise <<-EOT
      #{required_plugin} is not installed!
      Please run the command "vagrant plugin install #{required_plugin}"
    EOT
  end
end

# Begin Vagrant configuration. See https://docs.vagrantup.com for reference.
Vagrant.configure("2") do |config| 
  # Use a minimalist Debian box
  config.vm.box = "minimal/jessie64"

  # Some optimizations
  config.vm.provider "virtualbox" do |v|
    v.linked_clone = true
    v.memory = 2048
    v.cpus = 1
    v.customize ["modifyvm", :id, "--usb", "on"]
    v.customize ["modifyvm", :id, "--usbehci", "off"]
  end

  # Use hostmanager so we can refere to hosts from the host machine
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # Load hosts
  conf = YAML.load_file(File.expand_path('../vagrant-hosts.yml', __FILE__))
  
  conf['hosts'].each do |hostname, params|
    config.vm.define hostname do |worker|
      # Configure IP address
      worker.vm.network :private_network, :ip => params['ip']
      # Configure hostname
      worker.vm.hostname = hostname
      # Run provisioning scripts as specified by the config
      args = '-v' + (if ENV['FORCE_PROVISION'] == 'yes' then ' -f' else '' end)
      params['provision'].each do |provisioning_name|
        worker.vm.provision "shell",
          path: File.expand_path("../../install/provisioning_#{provisioning_name}.sh", __FILE__),
          args: args
      end
    end
  end

  # Disable automatic box update checking.
  # Run `vagrant box outdated` to check for updates.
  config.vm.box_check_update = false
end
